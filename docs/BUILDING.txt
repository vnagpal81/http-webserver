	    =========================================================
            Building The Dogmatix 1.0 HTTP Limited Edition Web Server
	    =========================================================

This project contains the source code for Dogmatix 1.0, an HTTP web server that
partially implements the HTTP 1.1 specification from the W3C RFC2616 
( http://www.w3.org/Protocols/rfc2616/rfc2616.html )

Note: If you just need to run the Web Server, it is not necessary to build
it. You may simply launch a binary distribution. It is cross-platform.
Read RUNNING.txt for the instruction on how to run it.

In order to build a binary distribution version of Dogmatix from a
source distribution, do the following:


(0) Download and Install a Java Development Kit

* If the JDK is already installed, skip to (1).

* Download a Java Development Kit (JDK) of Java SE version 7 from

    http://www.oracle.com/technetwork/java/javase/downloads/index.html
    or from another JDK vendor.

* Install the JDK according to the instructions included with the release.

* Set an environment variable JAVA_HOME to the pathname of the directory
  into which you installed the JDK release.


(1) Install Apache Maven 3.x on your computer

* If Apache Maven 3.x is already installed on your computer, skip to (2).

* Download a binary distribution of Maven 3.x from:

    http://maven.apache.org/download.cgi

* Unpack the binary distribution into a convenient location so that the
  Maven release resides in its own directory (conventionally named
  "apache-maven-[version]").  For the purposes of the remainder of this document,
  the symbolic name "${maven.home}" is used to refer to the full pathname of
  the release directory.

* Create an M2_HOME environment variable to point the directory
  ${maven.home}.

* Modify the PATH environment variable to include the directory
  ${maven.home}/bin in its list.  This makes the "mvn" command line script
  available, which will be used to actually perform the build.


(2) Building Dogmatix 1.0

(2.1) Checkout or obtain the source code for Dogmatix 1.0

* Dogmatix 1.0 GIT repository URL:
  https://github.com/vnagpal81/http-webserver.git

* Checkout the source using GIT, selecting a tag for released version or
  trunk for the current development code. The location where the source has 
  been placed will be referred as ${dogmatix.source}.

(2.2) Building

* Go to that directory, and do:

    cd ${dogmatix.source}
    mvn clean install

* NOTE: Maven is a convention-over-configuration build tool which uses a pre-defined 
  Project Object Model definition. It is a self-sufficient package which downloads its 
  own plugin dependencies, as required, from a public Maven repository.

* WARNING: Running "mvn clean install" command will download libraries required
  to build Dogmatix to the C:\Users\<username>\.m2\ directory which it creates as a local repository.  
  On a typical Linux or MacOX system this will be created at ~/.m2

* NOTE: Users accessing the Internet through a proxy must use a settings.xml
  file to indicate to Maven the proxy configuration. Read below.

* The build can be controlled by creating a ${user.home}/.m2/settings.xml
  file, and adding the following content to it:

    <proxies>
	<proxy>
	      <active>true</active>
	      <protocol>http</protocol>
	      <host>proxy.somewhere.com</host>
	      <port>8080</port>
	      <username>proxyuser</username>
	      <password>somepassword</password>
	      <nonProxyHosts>www.google.com|*.somewhere.com</nonProxyHosts>
	</proxy>
    </proxies>

 For more details visit : http://maven.apache.org/guides/mini/guide-proxies.html


(3) Updating sources

It is recommended that you regularly update the downloaded Dogmatix sources
using your GIT client.


(4) Rebuilds

For a quick rebuild of only modified code you can use:
   
    cd ${dogmatix.source}
    mvn clean install


(5) Building the server code documentation

The documentation can be easly built:

    cd ${dogmatix.source}
    mvn javadoc:javadoc

* NOTE: This will, unless already present, download the mvn-javadoc-plugin dependencies and
  generate the javadocs under ${dogmatix.source}/target/site/apidocs/


(6) Building a release running tests:

    cd ${dogmatix.source}
    mvn clean test package install